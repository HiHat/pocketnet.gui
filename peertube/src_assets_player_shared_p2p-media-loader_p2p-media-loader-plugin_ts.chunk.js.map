{"version":3,"file":"src_assets_player_shared_p2p-media-loader_p2p-media-loader-plugin_ts.chunk.js?v=93","mappings":"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","sources":["webpack://peertube-client/./src/assets/player/shared/p2p-media-loader/hls-plugin.ts","webpack://peertube-client/./src/assets/player/shared/p2p-media-loader/p2p-media-loader-plugin.ts","webpack://peertube-client/ignored|C:\\inetpub2022\\bastyon-player\\PeerTube-bst\\client\\node_modules\\bittorrent-tracker\\lib\\client|socks","webpack://peertube-client/ignored|C:\\inetpub2022\\bastyon-player\\PeerTube-bst\\client\\node_modules\\bittorrent-tracker\\lib|./common-node","webpack://peertube-client/ignored|C:\\inetpub2022\\bastyon-player\\PeerTube-bst\\client\\node_modules\\bittorrent-tracker|./lib/client/http-tracker","webpack://peertube-client/ignored|C:\\inetpub2022\\bastyon-player\\PeerTube-bst\\client\\node_modules\\bittorrent-tracker|./lib/client/udp-tracker","webpack://peertube-client/ignored|C:\\inetpub2022\\bastyon-player\\PeerTube-bst\\client\\node_modules\\readable-stream\\lib\\internal\\streams|util","webpack://peertube-client/ignored|C:\\inetpub2022\\bastyon-player\\PeerTube-bst\\client\\node_modules\\readable-stream\\lib|util","webpack://peertube-client/ignored|C:\\inetpub2022\\bastyon-player\\PeerTube-bst\\client\\node_modules\\simple-websocket|ws"],"sourcesContent":["// Thanks https://github.com/streamroot/videojs-hlsjs-plugin\r\n// We duplicated this plugin to choose the hls.js version we want, because streamroot only provide a bundled file\r\n\r\nimport Hlsjs, { ErrorData, HlsConfig, Level, LevelSwitchingData, ManifestParsedData } from 'hls.js'\r\nimport videojs from 'video.js'\r\nimport { logger } from '@root-helpers/logger'\r\nimport { HlsjsConfigHandlerOptions, PeerTubeResolution, VideoJSTechHLS } from '../../types'\r\n\r\ntype ErrorCounts = {\r\n  [ type: string ]: number\r\n}\r\n\r\ntype Metadata = {\r\n  levels: Level[]\r\n}\r\n\r\ntype HookFn = (player: videojs.Player, hljs: Hlsjs) => void\r\n\r\nconst registerSourceHandler = function (vjs: typeof videojs) {\r\n  if (!Hlsjs.isSupported()) {\r\n    logger.warn('Hls.js is not supported in this browser!')\r\n    return\r\n  }\r\n\r\n  const html5 = vjs.getTech('Html5')\r\n\r\n  if (!html5) {\r\n    logger.error('No Hml5 tech found in videojs')\r\n    return\r\n  }\r\n\r\n  // FIXME: typings\r\n  (html5 as any).registerSourceHandler({\r\n    canHandleSource: function (source: videojs.Tech.SourceObject) {\r\n      const hlsTypeRE = /^application\\/x-mpegURL|application\\/vnd\\.apple\\.mpegurl$/i\r\n      const hlsExtRE = /\\.m3u8/i\r\n\r\n      if (hlsTypeRE.test(source.type)) return 'probably'\r\n      if (hlsExtRE.test(source.src)) return 'maybe'\r\n\r\n      return ''\r\n    },\r\n\r\n    handleSource: function (source: videojs.Tech.SourceObject, tech: VideoJSTechHLS) {\r\n      if (tech.hlsProvider) {\r\n        tech.hlsProvider.dispose()\r\n      }\r\n\r\n      tech.hlsProvider = new Html5Hlsjs(vjs, source, tech)\r\n\r\n      return tech.hlsProvider\r\n    }\r\n  }, 0);\r\n\r\n  // FIXME: typings\r\n  (vjs as any).Html5Hlsjs = Html5Hlsjs\r\n}\r\n\r\nfunction hlsjsConfigHandler (this: videojs.Player, options: HlsjsConfigHandlerOptions) {\r\n  const player = this\r\n\r\n  if (!options) return\r\n\r\n  if (!player.srOptions_) {\r\n    player.srOptions_ = {}\r\n  }\r\n\r\n  if (!player.srOptions_.hlsjsConfig) {\r\n    player.srOptions_.hlsjsConfig = options.hlsjsConfig\r\n  }\r\n\r\n  \r\n\r\n  if (options.levelLabelHandler && !player.srOptions_.levelLabelHandler) {\r\n    player.srOptions_.levelLabelHandler = options.levelLabelHandler\r\n  }\r\n}\r\n\r\nconst registerConfigPlugin = function (vjs: typeof videojs) {\r\n  // Used in Brightcove since we don't pass options directly there\r\n  const registerVjsPlugin = vjs.registerPlugin || vjs.plugin\r\n  registerVjsPlugin('hlsjs', hlsjsConfigHandler)\r\n}\r\n\r\nclass Html5Hlsjs {\r\n  private static readonly hooks: { [id: string]: HookFn[] } = {}\r\n\r\n  private readonly videoElement: HTMLVideoElement\r\n  private readonly errorCounts: ErrorCounts = {}\r\n  private readonly player: videojs.Player\r\n  private readonly tech: videojs.Tech\r\n  private readonly source: videojs.Tech.SourceObject\r\n  private readonly vjs: typeof videojs\r\n\r\n  private maxNetworkErrorRecovery = 5\r\n\r\n  private hls: Hlsjs\r\n  private hlsjsConfig: Partial<HlsConfig & { cueHandler: any }> = null\r\n\r\n  private _duration: number = null\r\n  private metadata: Metadata = null\r\n  private isLive: boolean = null\r\n  private dvrDuration: number = null\r\n  private edgeMargin: number = null\r\n\r\n  private handlers: { [ id in 'play' ]: EventListener } = {\r\n    play: null\r\n  }\r\n\r\n  constructor (vjs: typeof videojs, source: videojs.Tech.SourceObject, tech: videojs.Tech) {\r\n    this.vjs = vjs\r\n    this.source = source\r\n\r\n    this.tech = tech;\r\n    (this.tech as any).name_ = 'Hlsjs'\r\n\r\n    this.videoElement = tech.el() as HTMLVideoElement\r\n    this.player = vjs((tech.options_ as any).playerId)\r\n\r\n    this.videoElement.addEventListener('error', event => {\r\n      let errorTxt: string\r\n      const mediaError = ((event.currentTarget || event.target) as HTMLVideoElement).error\r\n\r\n      if (!mediaError) return\r\n\r\n      logger.info(mediaError)\r\n      switch (mediaError.code) {\r\n        case mediaError.MEDIA_ERR_ABORTED:\r\n          errorTxt = 'You aborted the video playback'\r\n          break\r\n        case mediaError.MEDIA_ERR_DECODE:\r\n          errorTxt = 'The video playback was aborted due to a corruption problem or because the video used features ' +\r\n                     'your browser did not support'\r\n          this._handleMediaError(mediaError)\r\n          break\r\n        case mediaError.MEDIA_ERR_NETWORK:\r\n          errorTxt = 'A network error caused the video download to fail part-way'\r\n          break\r\n        case mediaError.MEDIA_ERR_SRC_NOT_SUPPORTED:\r\n          errorTxt = 'The video could not be loaded, either because the server or network failed or because the format is not supported'\r\n          break\r\n\r\n        default:\r\n          errorTxt = mediaError.message\r\n      }\r\n\r\n      logger.error(`MEDIA_ERROR: ${errorTxt}`)\r\n    })\r\n\r\n    this.initialize()\r\n  }\r\n\r\n  duration () {\r\n    if (this._duration === Infinity) return Infinity\r\n    if (!isNaN(this.videoElement.duration)) return this.videoElement.duration\r\n\r\n    return this._duration || 0\r\n  }\r\n\r\n  seekable () {\r\n    if (this.hls.media) {\r\n      if (!this.isLive) {\r\n        return this.vjs.createTimeRanges(0, this.hls.media.duration)\r\n      }\r\n\r\n      // Video.js doesn't seem to like floating point timeranges\r\n      const startTime = Math.round(this.hls.media.duration - this.dvrDuration)\r\n      const endTime = Math.round(this.hls.media.duration - this.edgeMargin)\r\n\r\n      return this.vjs.createTimeRanges(startTime, endTime)\r\n    }\r\n\r\n    return this.vjs.createTimeRanges()\r\n  }\r\n\r\n  // See comment for `initialize` method.\r\n  dispose () {\r\n    this.videoElement.removeEventListener('play', this.handlers.play)\r\n\r\n    // FIXME: https://github.com/video-dev/hls.js/issues/4092\r\n    const untypedHLS = this.hls as any\r\n    untypedHLS.log = untypedHLS.warn = () => {\r\n      // empty\r\n    }\r\n\r\n    this.hls.destroy()\r\n  }\r\n\r\n  static addHook (type: string, callback: HookFn) {\r\n    Html5Hlsjs.hooks[type] = this.hooks[type] || []\r\n    Html5Hlsjs.hooks[type].push(callback)\r\n  }\r\n\r\n  static removeHook (type: string, callback: HookFn) {\r\n    if (Html5Hlsjs.hooks[type] === undefined) return false\r\n\r\n    const index = Html5Hlsjs.hooks[type].indexOf(callback)\r\n    if (index === -1) return false\r\n\r\n    Html5Hlsjs.hooks[type].splice(index, 1)\r\n\r\n    return true\r\n  }\r\n\r\n  private _executeHooksFor (type: string) {\r\n    if (Html5Hlsjs.hooks[type] === undefined) {\r\n      return\r\n    }\r\n\r\n    // ES3 and IE < 9\r\n    for (let i = 0; i < Html5Hlsjs.hooks[type].length; i++) {\r\n      Html5Hlsjs.hooks[type][i](this.player, this.hls)\r\n    }\r\n  }\r\n\r\n  private _handleMediaError (error: any) {\r\n    if (this.errorCounts[Hlsjs.ErrorTypes.MEDIA_ERROR] === 1) {\r\n      logger.info('trying to recover media error')\r\n      this.hls.recoverMediaError()\r\n      return\r\n    }\r\n\r\n    if (this.errorCounts[Hlsjs.ErrorTypes.MEDIA_ERROR] === 2) {\r\n      logger.info('2nd try to recover media error (by swapping audio codec')\r\n      this.hls.swapAudioCodec()\r\n      this.hls.recoverMediaError()\r\n      return\r\n    }\r\n\r\n    if (this.errorCounts[Hlsjs.ErrorTypes.MEDIA_ERROR] > 2) {\r\n      logger.info('bubbling media error up to VIDEOJS')\r\n      this.hls.destroy()\r\n      this.tech.error = () => error\r\n      this.tech.trigger('error')\r\n    }\r\n  }\r\n\r\n  private _handleNetworkError (error: any) {\r\n    if (this.errorCounts[Hlsjs.ErrorTypes.NETWORK_ERROR] <= this.maxNetworkErrorRecovery) {\r\n      logger.info('trying to recover network error')\r\n\r\n      // Wait 1 second and retry\r\n      setTimeout(() => this.hls.startLoad(), 1000)\r\n\r\n      // Reset error count on success\r\n      this.hls.once(Hlsjs.Events.FRAG_LOADED, () => {\r\n        this.errorCounts[Hlsjs.ErrorTypes.NETWORK_ERROR] = 0\r\n      })\r\n\r\n      return\r\n    }\r\n\r\n    logger.info('bubbling network error up to VIDEOJS')\r\n    this.hls.destroy()\r\n    this.tech.error = () => error\r\n    this.tech.trigger('error')\r\n  }\r\n\r\n  private _onError (_event: any, data: ErrorData) {\r\n    const error: { message: string, code?: number } = {\r\n      message: `HLS.js error: ${data.type} - fatal: ${data.fatal} - ${data.details}`\r\n    }\r\n\r\n    // increment/set error count\r\n    if (this.errorCounts[data.type]) this.errorCounts[data.type] += 1\r\n    else this.errorCounts[data.type] = 1\r\n\r\n    if (data.fatal) logger.warn(error.message)\r\n    else logger.error(error.message, { data })\r\n\r\n    if (data.type === Hlsjs.ErrorTypes.NETWORK_ERROR) {\r\n      error.code = 2\r\n      this._handleNetworkError(error)\r\n    } else if (data.fatal && data.type === Hlsjs.ErrorTypes.MEDIA_ERROR && data.details !== 'manifestIncompatibleCodecsError') {\r\n      error.code = 3\r\n      this._handleMediaError(error)\r\n    } else if (data.fatal) {\r\n      this.hls.destroy()\r\n      logger.info('bubbling error up to VIDEOJS')\r\n      this.tech.error = () => error as any\r\n      this.tech.trigger('error')\r\n    }\r\n  }\r\n\r\n  private buildLevelLabel (level: Level) {\r\n    if (this.player.srOptions_.levelLabelHandler) {\r\n      return this.player.srOptions_.levelLabelHandler(level as any)\r\n    }\r\n\r\n    if (level.height) return level.height + 'p'\r\n    if (level.width) return Math.round(level.width * 9 / 16) + 'p'\r\n    if (level.bitrate) return (level.bitrate / 1000) + 'kbps'\r\n\r\n    return '0'\r\n  }\r\n\r\n  private _notifyVideoQualities () {\r\n    if (!this.metadata) return\r\n\r\n    const resolutions: PeerTubeResolution[] = []\r\n\r\n    this.metadata.levels.forEach((level, index) => {\r\n      resolutions.push({\r\n        id: index,\r\n        height: level.height,\r\n        width: level.width,\r\n        bitrate: level.bitrate,\r\n        label: this.buildLevelLabel(level),\r\n        selected: level.id === this.hls.manualLevel,\r\n\r\n        selectCallback: () => {\r\n          this.hls.currentLevel = index\r\n        }\r\n      })\r\n    })\r\n\r\n    resolutions.push({\r\n      id: -1,\r\n      label: this.player.localize('Auto'),\r\n      selected: true,\r\n      selectCallback: () => this.hls.currentLevel = -1\r\n    })\r\n\r\n    this.player.peertubeResolutions().add(resolutions)\r\n  }\r\n\r\n  private _startLoad () {\r\n    this.hls.startLoad(-1)\r\n    this.videoElement.removeEventListener('play', this.handlers.play)\r\n  }\r\n\r\n  private _oneLevelObjClone (obj: { [ id: string ]: any }) {\r\n    const result = {}\r\n    const objKeys = Object.keys(obj)\r\n    for (let i = 0; i < objKeys.length; i++) {\r\n      result[objKeys[i]] = obj[objKeys[i]]\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  private _onMetaData (_event: any, data: ManifestParsedData) {\r\n    // This could arrive before 'loadedqualitydata' handlers is registered, remember it so we can raise it later\r\n    this.metadata = data\r\n    this._notifyVideoQualities()\r\n  }\r\n\r\n  private _initHlsjs () {\r\n    const techOptions = this.tech.options_ as HlsjsConfigHandlerOptions\r\n    const srOptions_ = this.player.srOptions_\r\n\r\n    const hlsjsConfigRef = srOptions_?.hlsjsConfig || techOptions.hlsjsConfig\r\n    // Hls.js will write to the reference thus change the object for later streams\r\n    this.hlsjsConfig = hlsjsConfigRef ? this._oneLevelObjClone(hlsjsConfigRef) : {}\r\n\r\n    if ([ '', 'auto' ].includes(this.videoElement.preload) && !this.videoElement.autoplay && this.hlsjsConfig.autoStartLoad === undefined) {\r\n      this.hlsjsConfig.autoStartLoad = false\r\n    }\r\n\r\n    // If the user explicitly sets autoStartLoad to false, we're not going to enter the if block above\r\n    // That's why we have a separate if block here to set the 'play' listener\r\n    if (this.hlsjsConfig.autoStartLoad === false) {\r\n      this.handlers.play = this._startLoad.bind(this)\r\n      this.videoElement.addEventListener('play', this.handlers.play)\r\n    }\r\n\r\n    this.hls = new Hlsjs(this.hlsjsConfig)\r\n\r\n    this._executeHooksFor('beforeinitialize')\r\n\r\n    this.hls.on(Hlsjs.Events.ERROR, (event, data) => this._onError(event, data))\r\n    this.hls.on(Hlsjs.Events.MANIFEST_PARSED, (event, data) => this._onMetaData(event, data))\r\n    this.hls.on(Hlsjs.Events.LEVEL_LOADED, (event, data) => {\r\n      // The DVR plugin will auto seek to \"live edge\" on start up\r\n      if (this.hlsjsConfig.liveSyncDuration) {\r\n        this.edgeMargin = this.hlsjsConfig.liveSyncDuration\r\n      } else if (this.hlsjsConfig.liveSyncDurationCount) {\r\n        this.edgeMargin = this.hlsjsConfig.liveSyncDurationCount * data.details.targetduration\r\n      }\r\n\r\n      this.isLive = data.details.live\r\n      this.dvrDuration = data.details.totalduration\r\n\r\n      this._duration = this.isLive ? Infinity : data.details.totalduration\r\n\r\n      // Increase network error recovery for lives since they can be broken (server restart, stream interruption etc)\r\n      if (this.isLive) this.maxNetworkErrorRecovery = 300\r\n    })\r\n\r\n    this.hls.once(Hlsjs.Events.FRAG_LOADED, () => {\r\n      // Emit custom 'loadedmetadata' event for parity with `videojs-contrib-hls`\r\n      // Ref: https://github.com/videojs/videojs-contrib-hls#loadedmetadata\r\n      this.tech.trigger('loadedmetadata')\r\n    })\r\n\r\n    this.hls.on(Hlsjs.Events.LEVEL_SWITCHING, (_e, data: LevelSwitchingData) => {\r\n      const resolutionId = this.hls.autoLevelEnabled\r\n        ? -1\r\n        : data.level\r\n\r\n      const autoResolutionChosenId = this.hls.autoLevelEnabled\r\n        ? data.level\r\n        : -1\r\n\r\n      this.player.peertubeResolutions().select({ id: resolutionId, autoResolutionChosenId, byEngine: true })\r\n    })\r\n\r\n    this.hls.attachMedia(this.videoElement)\r\n\r\n    this.hls.loadSource(this.source.src)\r\n  }\r\n\r\n  private initialize () {\r\n    this._initHlsjs()\r\n  }\r\n}\r\n\r\nexport {\r\n  Html5Hlsjs,\r\n  registerSourceHandler,\r\n  registerConfigPlugin\r\n}\r\n","import Hlsjs from 'hls.js'\r\nimport videojs from 'video.js'\r\nimport { Events, Segment } from '@peertube/p2p-media-loader-core'\r\nimport { Engine, initHlsJsPlayer, initVideoJsContribHlsJsPlayer } from '@peertube/p2p-media-loader-hlsjs'\r\nimport { timeToInt } from '@shared/core-utils'\r\nimport { P2PMediaLoaderPluginOptions, PlayerNetworkInfo } from '../../types'\r\nimport { registerConfigPlugin, registerSourceHandler } from './hls-plugin'\r\nimport { logger } from '@root-helpers/logger'\r\n\r\nregisterConfigPlugin(videojs)\r\nregisterSourceHandler(videojs)\r\n\r\nconst Plugin = videojs.getPlugin('plugin')\r\nclass P2pMediaLoaderPlugin extends Plugin {\r\n\r\n  private readonly CONSTANTS = {\r\n    INFO_SCHEDULER: 1000 // Don't change this\r\n  }\r\n  private readonly options: P2PMediaLoaderPluginOptions\r\n\r\n  private hlsjs: Hlsjs\r\n  private p2pEngine: Engine\r\n  private statsP2PBytes = {\r\n    pendingDownload: [] as number[],\r\n    pendingUpload: [] as number[],\r\n    numPeers: 0,\r\n    totalDownload: 0,\r\n    totalUpload: 0\r\n  }\r\n  private statsHTTPBytes = {\r\n    pendingDownload: [] as number[],\r\n    pendingUpload: [] as number[],\r\n    totalDownload: 0,\r\n    totalUpload: 0\r\n  }\r\n  private startTime: number\r\n\r\n  private networkInfoInterval: any\r\n\r\n  constructor (player: videojs.Player, options?: P2PMediaLoaderPluginOptions) {\r\n    super(player)\r\n\r\n    this.options = options\r\n\r\n    // FIXME: typings https://github.com/Microsoft/TypeScript/issues/14080\r\n    if (!(videojs as any).Html5Hlsjs) {\r\n      logger.warn('HLS.js does not seem to be supported. Try to fallback to built in HLS.')\r\n\r\n      if (!player.canPlayType('application/vnd.apple.mpegurl')) {\r\n        const message = 'Cannot fallback to built-in HLS'\r\n        logger.warn(message)\r\n\r\n        player.ready(() => player.trigger('error', new Error(message)))\r\n        return\r\n      }\r\n    } else {\r\n      // FIXME: typings https://github.com/Microsoft/TypeScript/issues/14080\r\n      (videojs as any).Html5Hlsjs.addHook('beforeinitialize', (videojsPlayer: any, hlsjs: any) => {\r\n        this.hlsjs = hlsjs\r\n      })\r\n\r\n      initVideoJsContribHlsJsPlayer(player)\r\n    }\r\n\r\n    this.startTime = timeToInt(options.startTime)\r\n\r\n    player.src({\r\n      type: options.type,\r\n      src: options.src\r\n    })\r\n\r\n    player.ready(() => {\r\n      this.initializeCore()\r\n\r\n      if ((videojs as any).Html5Hlsjs) {\r\n        this.initializePlugin()\r\n      }\r\n    })\r\n  }\r\n\r\n  dispose () {\r\n    if (this.hlsjs) this.hlsjs.destroy()\r\n    if (this.p2pEngine) this.p2pEngine.destroy()\r\n\r\n    clearInterval(this.networkInfoInterval)\r\n  }\r\n\r\n  getCurrentLevel () {\r\n    return this.hlsjs.levels[this.hlsjs.currentLevel]\r\n  }\r\n\r\n  getLiveLatency () {\r\n    return Math.round(this.hlsjs.latency)\r\n  }\r\n\r\n  getHLSJS () {\r\n    return this.hlsjs\r\n  }\r\n\r\n  private initializeCore () {\r\n    this.player.one('play', () => {\r\n      this.player.addClass('vjs-has-big-play-button-clicked')\r\n    })\r\n\r\n    this.player.one('canplay', () => {\r\n      if (this.startTime) {\r\n        this.player.currentTime(this.startTime)\r\n      }\r\n    })\r\n  }\r\n\r\n  private initializePlugin () {\r\n    initHlsJsPlayer(this.hlsjs)\r\n\r\n    this.p2pEngine = this.options.loader.getEngine()\r\n\r\n    this.p2pEngine.on(Events.SegmentError, (segment: Segment, err) => {\r\n      logger.error(`Segment ${segment.id} error.`, err)\r\n\r\n      this.options.redundancyUrlManager.removeBySegmentUrl(segment.requestUrl)\r\n    })\r\n\r\n    this.statsP2PBytes.numPeers = 1 + this.options.redundancyUrlManager.countBaseUrls()\r\n\r\n    this.runStats()\r\n  }\r\n\r\n  private runStats () {\r\n    this.p2pEngine.on(Events.PieceBytesDownloaded, (method: string, _segment, bytes: number) => {\r\n      const elem = method === 'p2p' ? this.statsP2PBytes : this.statsHTTPBytes\r\n\r\n      elem.pendingDownload.push(bytes)\r\n      elem.totalDownload += bytes\r\n    })\r\n\r\n    this.p2pEngine.on(Events.PieceBytesUploaded, (method: string, _segment, bytes: number) => {\r\n      const elem = method === 'p2p' ? this.statsP2PBytes : this.statsHTTPBytes\r\n\r\n      elem.pendingUpload.push(bytes)\r\n      elem.totalUpload += bytes\r\n    })\r\n\r\n    this.p2pEngine.on(Events.PeerConnect, () => this.statsP2PBytes.numPeers++)\r\n    this.p2pEngine.on(Events.PeerClose, () => this.statsP2PBytes.numPeers--)\r\n\r\n    this.networkInfoInterval = setInterval(() => {\r\n      const p2pDownloadSpeed = this.arraySum(this.statsP2PBytes.pendingDownload)\r\n      const p2pUploadSpeed = this.arraySum(this.statsP2PBytes.pendingUpload)\r\n\r\n      const httpDownloadSpeed = this.arraySum(this.statsHTTPBytes.pendingDownload)\r\n      const httpUploadSpeed = this.arraySum(this.statsHTTPBytes.pendingUpload)\r\n\r\n      this.statsP2PBytes.pendingDownload = []\r\n      this.statsP2PBytes.pendingUpload = []\r\n      this.statsHTTPBytes.pendingDownload = []\r\n      this.statsHTTPBytes.pendingUpload = []\r\n\r\n      return this.player.trigger('p2pInfo', {\r\n        source: 'p2p-media-loader',\r\n        http: {\r\n          downloadSpeed: httpDownloadSpeed,\r\n          uploadSpeed: httpUploadSpeed,\r\n          downloaded: this.statsHTTPBytes.totalDownload,\r\n          uploaded: this.statsHTTPBytes.totalUpload\r\n        },\r\n        p2p: {\r\n          downloadSpeed: p2pDownloadSpeed,\r\n          uploadSpeed: p2pUploadSpeed,\r\n          numPeers: this.statsP2PBytes.numPeers,\r\n          downloaded: this.statsP2PBytes.totalDownload,\r\n          uploaded: this.statsP2PBytes.totalUpload\r\n        },\r\n        bandwidthEstimate: (this.hlsjs as any).bandwidthEstimate / 8\r\n      } as PlayerNetworkInfo)\r\n    }, this.CONSTANTS.INFO_SCHEDULER)\r\n  }\r\n\r\n  private arraySum (data: number[]) {\r\n    return data.reduce((a: number, b: number) => a + b, 0)\r\n  }\r\n}\r\n\r\nvideojs.registerPlugin('p2pMediaLoader', P2pMediaLoaderPlugin)\r\nexport { P2pMediaLoaderPlugin }\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":[],"sourceRoot":""}